### YamlMime:ManagedReference
items:
- uid: Yort.LatitudePay.InStore.LatitudePayAddress
  commentId: T:Yort.LatitudePay.InStore.LatitudePayAddress
  id: LatitudePayAddress
  parent: Yort.LatitudePay.InStore
  children:
  - Yort.LatitudePay.InStore.LatitudePayAddress.AddressLine1
  - Yort.LatitudePay.InStore.LatitudePayAddress.AddressLine2
  - Yort.LatitudePay.InStore.LatitudePayAddress.CityTown
  - Yort.LatitudePay.InStore.LatitudePayAddress.CountryCode
  - Yort.LatitudePay.InStore.LatitudePayAddress.Postcode
  - Yort.LatitudePay.InStore.LatitudePayAddress.State
  - Yort.LatitudePay.InStore.LatitudePayAddress.Suburb
  langs:
  - csharp
  - vb
  name: LatitudePayAddress
  nameWithType: LatitudePayAddress
  fullName: Yort.LatitudePay.InStore.LatitudePayAddress
  type: Class
  source:
    remote:
      path: src/LatitudePayAddress.cs
      branch: master
      repo: https://github.com/Yortw/Yort.LatitudePay.InStore
    id: LatitudePayAddress
    path: LatitudePayAddress.cs
    startLine: 7
  assemblies:
  - Yort.LatitudePay.InStore
  namespace: Yort.LatitudePay.InStore
  summary: "\nRepresents a physical/postal address used for delivery/shipping or billing.\n"
  example: []
  syntax:
    content: public class LatitudePayAddress
    content.vb: Public Class LatitudePayAddress
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Yort.LatitudePay.InStore.LatitudePayAddress.AddressLine1
  commentId: P:Yort.LatitudePay.InStore.LatitudePayAddress.AddressLine1
  id: AddressLine1
  parent: Yort.LatitudePay.InStore.LatitudePayAddress
  langs:
  - csharp
  - vb
  name: AddressLine1
  nameWithType: LatitudePayAddress.AddressLine1
  fullName: Yort.LatitudePay.InStore.LatitudePayAddress.AddressLine1
  type: Property
  source:
    remote:
      path: src/LatitudePayAddress.cs
      branch: master
      repo: https://github.com/Yortw/Yort.LatitudePay.InStore
    id: AddressLine1
    path: LatitudePayAddress.cs
    startLine: 15
  assemblies:
  - Yort.LatitudePay.InStore
  namespace: Yort.LatitudePay.InStore
  summary: "\nGets or sets the first address line.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("addressLine1")]

      public string AddressLine1 { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe first address line.\n"
    content.vb: >-
      <JsonProperty("addressLine1")>

      Public Property AddressLine1 As String
  overload: Yort.LatitudePay.InStore.LatitudePayAddress.AddressLine1*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: addressLine1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.LatitudePay.InStore.LatitudePayAddress.AddressLine2
  commentId: P:Yort.LatitudePay.InStore.LatitudePayAddress.AddressLine2
  id: AddressLine2
  parent: Yort.LatitudePay.InStore.LatitudePayAddress
  langs:
  - csharp
  - vb
  name: AddressLine2
  nameWithType: LatitudePayAddress.AddressLine2
  fullName: Yort.LatitudePay.InStore.LatitudePayAddress.AddressLine2
  type: Property
  source:
    remote:
      path: src/LatitudePayAddress.cs
      branch: master
      repo: https://github.com/Yortw/Yort.LatitudePay.InStore
    id: AddressLine2
    path: LatitudePayAddress.cs
    startLine: 23
  assemblies:
  - Yort.LatitudePay.InStore
  namespace: Yort.LatitudePay.InStore
  summary: "\nGets or sets the second address line.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("addressLine2")]

      public string AddressLine2 { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe second address line.\n"
    content.vb: >-
      <JsonProperty("addressLine2")>

      Public Property AddressLine2 As String
  overload: Yort.LatitudePay.InStore.LatitudePayAddress.AddressLine2*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: addressLine2
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.LatitudePay.InStore.LatitudePayAddress.Suburb
  commentId: P:Yort.LatitudePay.InStore.LatitudePayAddress.Suburb
  id: Suburb
  parent: Yort.LatitudePay.InStore.LatitudePayAddress
  langs:
  - csharp
  - vb
  name: Suburb
  nameWithType: LatitudePayAddress.Suburb
  fullName: Yort.LatitudePay.InStore.LatitudePayAddress.Suburb
  type: Property
  source:
    remote:
      path: src/LatitudePayAddress.cs
      branch: master
      repo: https://github.com/Yortw/Yort.LatitudePay.InStore
    id: Suburb
    path: LatitudePayAddress.cs
    startLine: 31
  assemblies:
  - Yort.LatitudePay.InStore
  namespace: Yort.LatitudePay.InStore
  summary: "\nGets or sets the suburb.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("suburb")]

      public string Suburb { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe suburb.\n"
    content.vb: >-
      <JsonProperty("suburb")>

      Public Property Suburb As String
  overload: Yort.LatitudePay.InStore.LatitudePayAddress.Suburb*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: suburb
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.LatitudePay.InStore.LatitudePayAddress.CityTown
  commentId: P:Yort.LatitudePay.InStore.LatitudePayAddress.CityTown
  id: CityTown
  parent: Yort.LatitudePay.InStore.LatitudePayAddress
  langs:
  - csharp
  - vb
  name: CityTown
  nameWithType: LatitudePayAddress.CityTown
  fullName: Yort.LatitudePay.InStore.LatitudePayAddress.CityTown
  type: Property
  source:
    remote:
      path: src/LatitudePayAddress.cs
      branch: master
      repo: https://github.com/Yortw/Yort.LatitudePay.InStore
    id: CityTown
    path: LatitudePayAddress.cs
    startLine: 39
  assemblies:
  - Yort.LatitudePay.InStore
  namespace: Yort.LatitudePay.InStore
  summary: "\nGets or sets the city or town.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("cityTown")]

      public string CityTown { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe city or town.\n"
    content.vb: >-
      <JsonProperty("cityTown")>

      Public Property CityTown As String
  overload: Yort.LatitudePay.InStore.LatitudePayAddress.CityTown*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: cityTown
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.LatitudePay.InStore.LatitudePayAddress.State
  commentId: P:Yort.LatitudePay.InStore.LatitudePayAddress.State
  id: State
  parent: Yort.LatitudePay.InStore.LatitudePayAddress
  langs:
  - csharp
  - vb
  name: State
  nameWithType: LatitudePayAddress.State
  fullName: Yort.LatitudePay.InStore.LatitudePayAddress.State
  type: Property
  source:
    remote:
      path: src/LatitudePayAddress.cs
      branch: master
      repo: https://github.com/Yortw/Yort.LatitudePay.InStore
    id: State
    path: LatitudePayAddress.cs
    startLine: 47
  assemblies:
  - Yort.LatitudePay.InStore
  namespace: Yort.LatitudePay.InStore
  summary: "\nGets or sets the state or province.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("state")]

      public string State { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe state or province.\n"
    content.vb: >-
      <JsonProperty("state")>

      Public Property State As String
  overload: Yort.LatitudePay.InStore.LatitudePayAddress.State*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: state
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.LatitudePay.InStore.LatitudePayAddress.Postcode
  commentId: P:Yort.LatitudePay.InStore.LatitudePayAddress.Postcode
  id: Postcode
  parent: Yort.LatitudePay.InStore.LatitudePayAddress
  langs:
  - csharp
  - vb
  name: Postcode
  nameWithType: LatitudePayAddress.Postcode
  fullName: Yort.LatitudePay.InStore.LatitudePayAddress.Postcode
  type: Property
  source:
    remote:
      path: src/LatitudePayAddress.cs
      branch: master
      repo: https://github.com/Yortw/Yort.LatitudePay.InStore
    id: Postcode
    path: LatitudePayAddress.cs
    startLine: 55
  assemblies:
  - Yort.LatitudePay.InStore
  namespace: Yort.LatitudePay.InStore
  summary: "\nGets or sets the postcode.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("postcode")]

      public string Postcode { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe postcode.\n"
    content.vb: >-
      <JsonProperty("postcode")>

      Public Property Postcode As String
  overload: Yort.LatitudePay.InStore.LatitudePayAddress.Postcode*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: postcode
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.LatitudePay.InStore.LatitudePayAddress.CountryCode
  commentId: P:Yort.LatitudePay.InStore.LatitudePayAddress.CountryCode
  id: CountryCode
  parent: Yort.LatitudePay.InStore.LatitudePayAddress
  langs:
  - csharp
  - vb
  name: CountryCode
  nameWithType: LatitudePayAddress.CountryCode
  fullName: Yort.LatitudePay.InStore.LatitudePayAddress.CountryCode
  type: Property
  source:
    remote:
      path: src/LatitudePayAddress.cs
      branch: master
      repo: https://github.com/Yortw/Yort.LatitudePay.InStore
    id: CountryCode
    path: LatitudePayAddress.cs
    startLine: 63
  assemblies:
  - Yort.LatitudePay.InStore
  namespace: Yort.LatitudePay.InStore
  summary: "\nGets or sets the country code.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("countryCode")]

      public string CountryCode { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe country code.\n"
    content.vb: >-
      <JsonProperty("countryCode")>

      Public Property CountryCode As String
  overload: Yort.LatitudePay.InStore.LatitudePayAddress.CountryCode*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: countryCode
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Yort.LatitudePay.InStore
  commentId: N:Yort.LatitudePay.InStore
  name: Yort.LatitudePay.InStore
  nameWithType: Yort.LatitudePay.InStore
  fullName: Yort.LatitudePay.InStore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Yort.LatitudePay.InStore.LatitudePayAddress.AddressLine1*
  commentId: Overload:Yort.LatitudePay.InStore.LatitudePayAddress.AddressLine1
  name: AddressLine1
  nameWithType: LatitudePayAddress.AddressLine1
  fullName: Yort.LatitudePay.InStore.LatitudePayAddress.AddressLine1
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Yort.LatitudePay.InStore.LatitudePayAddress.AddressLine2*
  commentId: Overload:Yort.LatitudePay.InStore.LatitudePayAddress.AddressLine2
  name: AddressLine2
  nameWithType: LatitudePayAddress.AddressLine2
  fullName: Yort.LatitudePay.InStore.LatitudePayAddress.AddressLine2
- uid: Yort.LatitudePay.InStore.LatitudePayAddress.Suburb*
  commentId: Overload:Yort.LatitudePay.InStore.LatitudePayAddress.Suburb
  name: Suburb
  nameWithType: LatitudePayAddress.Suburb
  fullName: Yort.LatitudePay.InStore.LatitudePayAddress.Suburb
- uid: Yort.LatitudePay.InStore.LatitudePayAddress.CityTown*
  commentId: Overload:Yort.LatitudePay.InStore.LatitudePayAddress.CityTown
  name: CityTown
  nameWithType: LatitudePayAddress.CityTown
  fullName: Yort.LatitudePay.InStore.LatitudePayAddress.CityTown
- uid: Yort.LatitudePay.InStore.LatitudePayAddress.State*
  commentId: Overload:Yort.LatitudePay.InStore.LatitudePayAddress.State
  name: State
  nameWithType: LatitudePayAddress.State
  fullName: Yort.LatitudePay.InStore.LatitudePayAddress.State
- uid: Yort.LatitudePay.InStore.LatitudePayAddress.Postcode*
  commentId: Overload:Yort.LatitudePay.InStore.LatitudePayAddress.Postcode
  name: Postcode
  nameWithType: LatitudePayAddress.Postcode
  fullName: Yort.LatitudePay.InStore.LatitudePayAddress.Postcode
- uid: Yort.LatitudePay.InStore.LatitudePayAddress.CountryCode*
  commentId: Overload:Yort.LatitudePay.InStore.LatitudePayAddress.CountryCode
  name: CountryCode
  nameWithType: LatitudePayAddress.CountryCode
  fullName: Yort.LatitudePay.InStore.LatitudePayAddress.CountryCode
