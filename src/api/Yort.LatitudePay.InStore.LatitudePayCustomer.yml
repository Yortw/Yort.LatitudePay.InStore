### YamlMime:ManagedReference
items:
- uid: Yort.LatitudePay.InStore.LatitudePayCustomer
  commentId: T:Yort.LatitudePay.InStore.LatitudePayCustomer
  id: LatitudePayCustomer
  parent: Yort.LatitudePay.InStore
  children:
  - Yort.LatitudePay.InStore.LatitudePayCustomer.Address
  - Yort.LatitudePay.InStore.LatitudePayCustomer.DateOfBirth
  - Yort.LatitudePay.InStore.LatitudePayCustomer.Email
  - Yort.LatitudePay.InStore.LatitudePayCustomer.FirstName
  - Yort.LatitudePay.InStore.LatitudePayCustomer.MobileNumber
  - Yort.LatitudePay.InStore.LatitudePayCustomer.Surname
  langs:
  - csharp
  - vb
  name: LatitudePayCustomer
  nameWithType: LatitudePayCustomer
  fullName: Yort.LatitudePay.InStore.LatitudePayCustomer
  type: Class
  source:
    remote:
      path: src/LatitudePayCustomer.cs
      branch: master
      repo: https://github.com/Yortw/Yort.LatitudePay.InStore
    id: LatitudePayCustomer
    path: LatitudePayCustomer.cs
    startLine: 9
  assemblies:
  - Yort.LatitudePay.InStore
  namespace: Yort.LatitudePay.InStore
  summary: "\nRepresents a customer as part of a <xref href=\"Yort.LatitudePay.InStore.LatitudePayCreatePosPurchaseRequest\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public class LatitudePayCustomer
    content.vb: Public Class LatitudePayCustomer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Yort.LatitudePay.InStore.LatitudePayCustomer.MobileNumber
  commentId: P:Yort.LatitudePay.InStore.LatitudePayCustomer.MobileNumber
  id: MobileNumber
  parent: Yort.LatitudePay.InStore.LatitudePayCustomer
  langs:
  - csharp
  - vb
  name: MobileNumber
  nameWithType: LatitudePayCustomer.MobileNumber
  fullName: Yort.LatitudePay.InStore.LatitudePayCustomer.MobileNumber
  type: Property
  source:
    remote:
      path: src/LatitudePayCustomer.cs
      branch: master
      repo: https://github.com/Yortw/Yort.LatitudePay.InStore
    id: MobileNumber
    path: LatitudePayCustomer.cs
    startLine: 20
  assemblies:
  - Yort.LatitudePay.InStore
  namespace: Yort.LatitudePay.InStore
  summary: "\nGets or sets the mobile number of the customer.\n"
  remarks: "\n<p>Required as this is used to send the customer an SMS message prompting them to approve the payment plan.</p>\n"
  example: []
  syntax:
    content: >-
      [Required]

      [JsonProperty("mobileNumber")]

      public string MobileNumber { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe mobile number.\n"
    content.vb: >-
      <Required>

      <JsonProperty("mobileNumber")>

      Public Property MobileNumber As String
  overload: Yort.LatitudePay.InStore.LatitudePayCustomer.MobileNumber*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: mobileNumber
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.LatitudePay.InStore.LatitudePayCustomer.FirstName
  commentId: P:Yort.LatitudePay.InStore.LatitudePayCustomer.FirstName
  id: FirstName
  parent: Yort.LatitudePay.InStore.LatitudePayCustomer
  langs:
  - csharp
  - vb
  name: FirstName
  nameWithType: LatitudePayCustomer.FirstName
  fullName: Yort.LatitudePay.InStore.LatitudePayCustomer.FirstName
  type: Property
  source:
    remote:
      path: src/LatitudePayCustomer.cs
      branch: master
      repo: https://github.com/Yortw/Yort.LatitudePay.InStore
    id: FirstName
    path: LatitudePayCustomer.cs
    startLine: 29
  assemblies:
  - Yort.LatitudePay.InStore
  namespace: Yort.LatitudePay.InStore
  summary: "\nGets or sets the first name of the customer.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("firstName")]

      public string FirstName { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe first name.\n"
    content.vb: >-
      <JsonProperty("firstName")>

      Public Property FirstName As String
  overload: Yort.LatitudePay.InStore.LatitudePayCustomer.FirstName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: firstName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.LatitudePay.InStore.LatitudePayCustomer.Surname
  commentId: P:Yort.LatitudePay.InStore.LatitudePayCustomer.Surname
  id: Surname
  parent: Yort.LatitudePay.InStore.LatitudePayCustomer
  langs:
  - csharp
  - vb
  name: Surname
  nameWithType: LatitudePayCustomer.Surname
  fullName: Yort.LatitudePay.InStore.LatitudePayCustomer.Surname
  type: Property
  source:
    remote:
      path: src/LatitudePayCustomer.cs
      branch: master
      repo: https://github.com/Yortw/Yort.LatitudePay.InStore
    id: Surname
    path: LatitudePayCustomer.cs
    startLine: 37
  assemblies:
  - Yort.LatitudePay.InStore
  namespace: Yort.LatitudePay.InStore
  summary: "\nGets or sets the surname of the customer.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("surname")]

      public string Surname { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe surname.\n"
    content.vb: >-
      <JsonProperty("surname")>

      Public Property Surname As String
  overload: Yort.LatitudePay.InStore.LatitudePayCustomer.Surname*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: surname
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.LatitudePay.InStore.LatitudePayCustomer.Email
  commentId: P:Yort.LatitudePay.InStore.LatitudePayCustomer.Email
  id: Email
  parent: Yort.LatitudePay.InStore.LatitudePayCustomer
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: LatitudePayCustomer.Email
  fullName: Yort.LatitudePay.InStore.LatitudePayCustomer.Email
  type: Property
  source:
    remote:
      path: src/LatitudePayCustomer.cs
      branch: master
      repo: https://github.com/Yortw/Yort.LatitudePay.InStore
    id: Email
    path: LatitudePayCustomer.cs
    startLine: 45
  assemblies:
  - Yort.LatitudePay.InStore
  namespace: Yort.LatitudePay.InStore
  summary: "\nGets or sets the email address of the customer.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("email")]

      public string Email { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe email.\n"
    content.vb: >-
      <JsonProperty("email")>

      Public Property Email As String
  overload: Yort.LatitudePay.InStore.LatitudePayCustomer.Email*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: email
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.LatitudePay.InStore.LatitudePayCustomer.Address
  commentId: P:Yort.LatitudePay.InStore.LatitudePayCustomer.Address
  id: Address
  parent: Yort.LatitudePay.InStore.LatitudePayCustomer
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: LatitudePayCustomer.Address
  fullName: Yort.LatitudePay.InStore.LatitudePayCustomer.Address
  type: Property
  source:
    remote:
      path: src/LatitudePayCustomer.cs
      branch: master
      repo: https://github.com/Yortw/Yort.LatitudePay.InStore
    id: Address
    path: LatitudePayCustomer.cs
    startLine: 53
  assemblies:
  - Yort.LatitudePay.InStore
  namespace: Yort.LatitudePay.InStore
  summary: "\nGets or sets the physical/postal address of the customer.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("address")]

      public LatitudePayAddress Address { get; set; }
    parameters: []
    return:
      type: Yort.LatitudePay.InStore.LatitudePayAddress
      description: "\nThe address.\n"
    content.vb: >-
      <JsonProperty("address")>

      Public Property Address As LatitudePayAddress
  overload: Yort.LatitudePay.InStore.LatitudePayCustomer.Address*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: address
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.LatitudePay.InStore.LatitudePayCustomer.DateOfBirth
  commentId: P:Yort.LatitudePay.InStore.LatitudePayCustomer.DateOfBirth
  id: DateOfBirth
  parent: Yort.LatitudePay.InStore.LatitudePayCustomer
  langs:
  - csharp
  - vb
  name: DateOfBirth
  nameWithType: LatitudePayCustomer.DateOfBirth
  fullName: Yort.LatitudePay.InStore.LatitudePayCustomer.DateOfBirth
  type: Property
  source:
    remote:
      path: src/LatitudePayCustomer.cs
      branch: master
      repo: https://github.com/Yortw/Yort.LatitudePay.InStore
    id: DateOfBirth
    path: LatitudePayCustomer.cs
    startLine: 61
  assemblies:
  - Yort.LatitudePay.InStore
  namespace: Yort.LatitudePay.InStore
  summary: "\nGets or sets the birth date of the customer.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("dateOfBirth")]

      public DateTime? DateOfBirth { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
      description: "\nThe date of birth.\n"
    content.vb: >-
      <JsonProperty("dateOfBirth")>

      Public Property DateOfBirth As Date?
  overload: Yort.LatitudePay.InStore.LatitudePayCustomer.DateOfBirth*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: dateOfBirth
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Yort.LatitudePay.InStore.LatitudePayCreatePosPurchaseRequest
  commentId: T:Yort.LatitudePay.InStore.LatitudePayCreatePosPurchaseRequest
  parent: Yort.LatitudePay.InStore
  name: LatitudePayCreatePosPurchaseRequest
  nameWithType: LatitudePayCreatePosPurchaseRequest
  fullName: Yort.LatitudePay.InStore.LatitudePayCreatePosPurchaseRequest
- uid: Yort.LatitudePay.InStore
  commentId: N:Yort.LatitudePay.InStore
  name: Yort.LatitudePay.InStore
  nameWithType: Yort.LatitudePay.InStore
  fullName: Yort.LatitudePay.InStore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Yort.LatitudePay.InStore.LatitudePayCustomer.MobileNumber*
  commentId: Overload:Yort.LatitudePay.InStore.LatitudePayCustomer.MobileNumber
  name: MobileNumber
  nameWithType: LatitudePayCustomer.MobileNumber
  fullName: Yort.LatitudePay.InStore.LatitudePayCustomer.MobileNumber
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Yort.LatitudePay.InStore.LatitudePayCustomer.FirstName*
  commentId: Overload:Yort.LatitudePay.InStore.LatitudePayCustomer.FirstName
  name: FirstName
  nameWithType: LatitudePayCustomer.FirstName
  fullName: Yort.LatitudePay.InStore.LatitudePayCustomer.FirstName
- uid: Yort.LatitudePay.InStore.LatitudePayCustomer.Surname*
  commentId: Overload:Yort.LatitudePay.InStore.LatitudePayCustomer.Surname
  name: Surname
  nameWithType: LatitudePayCustomer.Surname
  fullName: Yort.LatitudePay.InStore.LatitudePayCustomer.Surname
- uid: Yort.LatitudePay.InStore.LatitudePayCustomer.Email*
  commentId: Overload:Yort.LatitudePay.InStore.LatitudePayCustomer.Email
  name: Email
  nameWithType: LatitudePayCustomer.Email
  fullName: Yort.LatitudePay.InStore.LatitudePayCustomer.Email
- uid: Yort.LatitudePay.InStore.LatitudePayCustomer.Address*
  commentId: Overload:Yort.LatitudePay.InStore.LatitudePayCustomer.Address
  name: Address
  nameWithType: LatitudePayCustomer.Address
  fullName: Yort.LatitudePay.InStore.LatitudePayCustomer.Address
- uid: Yort.LatitudePay.InStore.LatitudePayAddress
  commentId: T:Yort.LatitudePay.InStore.LatitudePayAddress
  parent: Yort.LatitudePay.InStore
  name: LatitudePayAddress
  nameWithType: LatitudePayAddress
  fullName: Yort.LatitudePay.InStore.LatitudePayAddress
- uid: Yort.LatitudePay.InStore.LatitudePayCustomer.DateOfBirth*
  commentId: Overload:Yort.LatitudePay.InStore.LatitudePayCustomer.DateOfBirth
  name: DateOfBirth
  nameWithType: LatitudePayCustomer.DateOfBirth
  fullName: Yort.LatitudePay.InStore.LatitudePayCustomer.DateOfBirth
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
